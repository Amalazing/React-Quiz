{"version":3,"sources":["Components/Score-Screen/score_screen.js","Components/Science/science.js","Components/History/history.js","Components/Art/art.js","Components/Quiz/quiz.js","App.js","serviceWorker.js","index.js"],"names":["Bounce","styled","div","keyframes","bounce","Score_Screen","props","state","home","handleHome","bind","this","setState","player_score","className","id","onClick","React","Component","Science","question_count","handleSelectedAnswer","event","currentTarget","getAttribute","Data","correct","current_question","undefined","question","value","answer1","answer2","answer3","answer4","backFromScience","History","backFromHistory","Art","backFromArt","Quiz","science","history","art","hingeAnimation","handleScience","handleHistory","handleArt","hinge","console","log","score","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb836f55.chunk.js","sourcesContent":["import React from 'react';\r\nimport './score_screen.css';\r\nimport Quiz from '../Quiz/quiz';\r\n\r\nimport { bounce } from 'react-animations';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Bounce = styled.div`\r\n    animation: 2s ${keyframes`${bounce}`} infinite;\r\n`;\r\n\r\nexport default class Score_Screen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            home: false\r\n        };\r\n        this.handleHome = this.handleHome.bind(this);\r\n    }\r\n\r\n    handleHome() {\r\n        this.setState({\r\n            home: !this.state.home\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.home === true) {\r\n            return <Quiz />;\r\n        }\r\n        if (this.props.player_score < 5) {\r\n            return (\r\n                <div className=\"container-score_screen\">\r\n                    <p className=\"question-score_screen\">Better Luck Next Time</p>\r\n                    <Bounce>\r\n                        <h1 className=\"title-score_screen\">\r\n                            {this.props.player_score}/10\r\n                        </h1>\r\n                    </Bounce>\r\n                    <div\r\n                        className=\"btn-score_screen\"\r\n                        id=\"btn-score_screen\"\r\n                        onClick={this.handleHome}\r\n                    >\r\n                        Home\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if (this.props.player_score >= 5 && this.props.player_score < 8) {\r\n            return (\r\n                <div className=\"container-score_screen\">\r\n                    <p className=\"question-score_screen\">Pretty Good Job!</p>\r\n                    <Bounce>\r\n                        <h1 className=\"title-score_screen\">\r\n                            {this.props.player_score}/10\r\n                        </h1>\r\n                    </Bounce>\r\n                    <div\r\n                        className=\"btn-score_screen\"\r\n                        id=\"btn-score_screen\"\r\n                        onClick={this.handleHome}\r\n                    >\r\n                        Home\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if (this.props.player_score >= 8 && this.props.player_score < 10) {\r\n            return (\r\n                <div className=\"container-score_screen\">\r\n                    <p className=\"question-score_screen\">Wow Great Job!</p>\r\n                    <Bounce>\r\n                        <h1 className=\"title-score_screen\">\r\n                            {this.props.player_score}/10\r\n                        </h1>\r\n                    </Bounce>\r\n                    <div\r\n                        className=\"btn-score_screen\"\r\n                        id=\"btn-score_screen\"\r\n                        onClick={this.handleHome}\r\n                    >\r\n                        Home\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"container-score_screen\">\r\n                <p className=\"question-score_screen\">PERFECT SCORE!!!</p>\r\n                <Bounce>\r\n                    <h1 className=\"title-score_screen\">\r\n                        {this.props.player_score}/10\r\n                    </h1>\r\n                </Bounce>\r\n                <div\r\n                    className=\"btn-score_screen\"\r\n                    id=\"btn-score_screen\"\r\n                    onClick={this.handleHome}\r\n                >\r\n                    Home\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './science.css';\r\nimport ScoreScreen from '../Score-Screen/score_screen';\r\n\r\nimport Data from '../../Questions/science-questions.json';\r\n\r\nexport default class Science extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            question_count: 0,\r\n            player_score: 0\r\n        };\r\n        this.handleSelectedAnswer = this.handleSelectedAnswer.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            player_score: 0,\r\n            question_count: 0\r\n        });\r\n    }\r\n\r\n    handleSelectedAnswer(event) {\r\n        if (event.currentTarget.getAttribute('value') === Data[this.state.question_count].correct) {\r\n            this.setState({\r\n                player_score: this.state.player_score + 1,\r\n                question_count: this.state.question_count + 1\r\n            });\r\n        } else {\r\n            this.setState({\r\n                question_count: this.state.question_count + 1\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const current_question = Data[this.state.question_count];\r\n        if(Data[this.state.question_count] === undefined){\r\n            return <ScoreScreen player_score={this.state.player_score}/>\r\n        }\r\n        return (\r\n            <div className=\"container-science\">\r\n                <h1 className=\"title-science\">Science</h1>\r\n                <p className=\"question-science\">{current_question.question}</p>\r\n                <div\r\n                    className=\"btn-science\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer1}\r\n                >\r\n                    {current_question.answer1}\r\n                </div>\r\n                <div\r\n                    className=\"btn-science\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer2}\r\n                >\r\n                    {current_question.answer2}\r\n                </div>\r\n                <div\r\n                    className=\"btn-science\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer3}\r\n                >\r\n                    {current_question.answer3}\r\n                </div>\r\n                <div\r\n                    className=\"btn-science\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer4}\r\n                >\r\n                    {current_question.answer4}\r\n                </div>\r\n                <div\r\n                    className=\"btn-science\"\r\n                    id=\"btn-home-science\"\r\n                    onClick={this.props.backFromScience}\r\n                >\r\n                    Home\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './history.css';\r\nimport ScoreScreen from '../Score-Screen/score_screen';\r\n\r\nimport Data from '../../Questions/history-questions.json';\r\n\r\nexport default class History extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            question_count: 0,\r\n            player_score: 0\r\n        };\r\n        this.handleSelectedAnswer = this.handleSelectedAnswer.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            player_score: 0,\r\n            question_count: 0\r\n        });\r\n    }\r\n\r\n    handleSelectedAnswer(event) {\r\n        if (event.currentTarget.getAttribute('value') === Data[this.state.question_count].correct) {\r\n            this.setState({\r\n                player_score: this.state.player_score + 1,\r\n                question_count: this.state.question_count + 1\r\n            });\r\n        } else {\r\n            this.setState({\r\n                question_count: this.state.question_count + 1\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const current_question = Data[this.state.question_count];\r\n        if(Data[this.state.question_count] === undefined){\r\n            return <ScoreScreen player_score={this.state.player_score}/>\r\n        }\r\n        return (\r\n            <div className=\"container-history\">\r\n                <h1 className=\"title-history\">History</h1>\r\n                <p className=\"question-history\">{current_question.question}</p>\r\n                <div\r\n                    className=\"btn-history\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer1}\r\n                >\r\n                    {current_question.answer1}\r\n                </div>\r\n                <div\r\n                    className=\"btn-history\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer2}\r\n                >\r\n                    {current_question.answer2}\r\n                </div>\r\n                <div\r\n                    className=\"btn-history\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer3}\r\n                >\r\n                    {current_question.answer3}\r\n                </div>\r\n                <div\r\n                    className=\"btn-history\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer4}\r\n                >\r\n                    {current_question.answer4}\r\n                </div>\r\n                <div\r\n                    className=\"btn-history\"\r\n                    id=\"btn-home-history\"\r\n                    onClick={this.props.backFromHistory}\r\n                >\r\n                    Home\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './art.css';\r\nimport ScoreScreen from '../Score-Screen/score_screen';\r\n\r\nimport Data from '../../Questions/art-questions.json';\r\n\r\nexport default class Art extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            question_count: 0,\r\n            player_score: 0\r\n        };\r\n        this.handleSelectedAnswer = this.handleSelectedAnswer.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            player_score: 0,\r\n            question_count: 0\r\n        });\r\n    }\r\n\r\n    handleSelectedAnswer(event) {\r\n        if (event.currentTarget.getAttribute('value') === Data[this.state.question_count].correct) {\r\n            this.setState({\r\n                player_score: this.state.player_score + 1,\r\n                question_count: this.state.question_count + 1\r\n            });\r\n        } else {\r\n            this.setState({\r\n                question_count: this.state.question_count + 1\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const current_question = Data[this.state.question_count];\r\n        if(Data[this.state.question_count] === undefined){\r\n            return <ScoreScreen player_score={this.state.player_score}/>\r\n        }\r\n        return (\r\n            <div className=\"container-art\">\r\n                <h1 className=\"title-art\">Art</h1>\r\n                <p className=\"question-art\">{current_question.question}</p>\r\n                <div\r\n                    className=\"btn-art\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer1}\r\n                >\r\n                    {current_question.answer1}\r\n                </div>\r\n                <div\r\n                    className=\"btn-art\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer2}\r\n                >\r\n                    {current_question.answer2}\r\n                </div>\r\n                <div\r\n                    className=\"btn-art\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer3}\r\n                >\r\n                    {current_question.answer3}\r\n                </div>\r\n                <div\r\n                    className=\"btn-art\"\r\n                    onClick={this.handleSelectedAnswer}\r\n                    value={current_question.answer4}\r\n                >\r\n                    {current_question.answer4}\r\n                </div>\r\n                <div\r\n                    className=\"btn-art\"\r\n                    id=\"btn-home-art\"\r\n                    onClick={this.props.backFromArt}\r\n                >\r\n                    Home\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './quiz.css';\r\nimport Science from '../Science/science';\r\nimport History from '../History/history';\r\nimport Art from '../Art/art';\r\n\r\nimport { bounce } from 'react-animations';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Bounce = styled.div`\r\n    animation: 2s ${keyframes`${bounce}`} infinite;\r\n`;\r\n\r\nexport default class Quiz extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            science: false,\r\n            history: false,\r\n            art: false,\r\n            hingeAnimation: false,\r\n        };\r\n        this.handleScience = this.handleScience.bind(this);\r\n        this.handleHistory = this.handleHistory.bind(this);\r\n        this.handleArt = this.handleArt.bind(this);\r\n    }\r\n\r\n    handleScience() {\r\n        this.setState({\r\n            science: !this.state.science,\r\n            hingeAnimation: !this.state.hingeAnimation\r\n        });\r\n    }\r\n\r\n    handleHistory() {\r\n        this.setState({\r\n            history: !this.state.history,\r\n            hingeAnimation: !this.state.hingeAnimation\r\n        });\r\n    }\r\n\r\n    handleArt() {\r\n        this.setState({\r\n            art: !this.state.art,\r\n            hingeAnimation: !this.state.hingeAnimation\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const hinge = this.state.hingeAnimation;\r\n        console.log(hinge);\r\n\r\n        if (this.state.science === true) {\r\n            return (\r\n                <Science\r\n                    backFromScience={this.handleScience}\r\n                />\r\n            );\r\n        }\r\n        if (this.state.history === true) {\r\n            return (\r\n                <History\r\n                    backFromHistory={this.handleHistory}\r\n                />\r\n            );\r\n        }\r\n        if (this.state.art === true) {\r\n            return (\r\n                <Art backFromArt={this.handleArt} score={this.state.score} />\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"container-quiz\">\r\n                <Bounce>\r\n                    <h1 className=\"title-quiz\">Quiz Time!</h1>\r\n                </Bounce>\r\n                <div\r\n                    className=\"btn-quiz\"\r\n                    id=\"first-btn-quiz\"\r\n                    onClick={this.handleScience}\r\n                >\r\n                    Science\r\n                </div>\r\n                <div className=\"btn-quiz\" onClick={this.handleHistory}>\r\n                    History\r\n                </div>\r\n                <div className=\"btn-quiz\" onClick={this.handleArt}>\r\n                    Art\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport Quiz from './Components/Quiz/quiz';\n\nfunction App() {\n  return (\n    <div>\n      <Quiz/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}